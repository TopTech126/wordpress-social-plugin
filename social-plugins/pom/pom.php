<?php

  define(TWEAK, true);
  define(CLEAN, true);
  define(INPUT_FILE, 'src/plugins.json');
  define(OUTPUT_DIR, 'build');

  array_shift($argv); //pom.php
  if (!($input_file = array_shift($argv))) {
    $input_file = INPUT_FILE;
  }
  if (!($output_dir = array_shift($argv)) || !is_dir($output_dir)) {
    $output_dir = OUTPUT_DIR;
  }

  print "\nCompiling POM from $input_file to $output_dir\n\n";

  try {
    $input = json_decode(file_get_contents($input_file), true);
    $plugins = $input['plugins'];
  } catch (Exception $e) {
    print "Could not read or parse $input_file as a JSON list of plugins";
    exit();
  }

  if (TWEAK) {
    tweak($plugins);
  }

  if (CLEAN) {
    @rmdir($output_dir);
  }
  @mkdir($output_dir);

  foreach(compilePhp($plugins) as $filename=>$php) {
    $filename = $output_dir . DIRECTORY_SEPARATOR . $filename;
    file_put_contents($filename, $php);
    include_once($filename);
    print "Wrote & tested $filename\n";
  }

  exit();

  // -----------

  function tweak($plugins) {
    foreach($plugins as $index=>$plugin) {
      $params = $plugin['params'];
      foreach($params as $param=>$config) {
        foreach($config as $field=>$value) {
          switch ($field) {
            case 'description':
              if (substr($value, -1) != '.') {
                $plugins[$index] .= ".";
              }
              break;
            default:
              break;
          }
          $config[$field] = $value;
        }
        $params[$param] = $config;
      }
      $plugins[$index] = $plugin;
    }
  }

  function compilePhp($plugins) {
    $compiled = array(
      'base.php' =>
      array(
        'class FBP_Base {',
        '}'
      )
    );
    foreach($plugins as $index=>$plugin) {
      $filename = str_replace(' ', '', strtolower($plugin['name'])) . '.php';
      $php = array("// Autogenerated at " . gmdate('Y-m-d H:i:s') . " GMT");

      $class = str_replace(' ', '_',  ucwords($plugin['name']));
      $php[] = "include_once('base.php');";
      $php[] = "class FBP_$class extends FBP_Base {";
      $php[] = "}";
      $compiled[$filename] = $php;
    }
    foreach($compiled as $filename=>$php) {
      array_unshift($php, '<?php');
      array_push($php, '?>');
      $compiled[$filename] = implode("\n", $php);
    }
    return $compiled;
  }

?>